pkg: &pkg d3-rs-circlepack
s3: &s3_bucket redsift-static
image: &default_image circleci/node:10-browsers

version: 2
jobs:
  build:
    docker:
      - image: *default_image
        environment:
          CIRCLE_TEST_REPORTS: ./
    working_directory: ~/build  
    steps:
      - checkout
      - run:
          name: Build and test
          command: |
            npm install
            npm test
      - run:
          name: Capture shot
          command: |
            npm run browse &
            sleep 5
            curl https://raw.githubusercontent.com/ariya/phantomjs/master/examples/rasterize.js -o r.js
            phantomjs r.js http://localhost:3000/examples/preview.html ./dist/preview.png     
      - persist_to_workspace:
          root: dist
          paths:
            - "@redsift" 
            - package.js  
      - store_artifacts:
          path: ~/build/dist    
      - store_test_results:
          path: ~/build/junit      

  push:
    docker:
      - image: circleci/python:2.7-jessie
        environment:
          S3_BUCKET: *s3_bucket
          NAME: *pkg     
    working_directory: ~/build        
    steps:
      - checkout       
      - attach_workspace:
          at: ./dist              
      - run:
          name: Install AWSCLI
          command: |
            sudo pip install awscli        
      - run:
          name: Push to S3
          command: |     
            ls -la
            VERSION=$(cat package.json | python -c 'import sys, json; print json.load(sys.stdin)["version"]')-$(git describe --exact-match --tags 2>/dev/null || git rev-parse --short HEAD)
            aws s3 cp ./dist s3://$S3_BUCKET/reusable/$NAME/latest --recursive --acl public-read --cache-control max-age=7200,public
            aws s3 cp ./dist s3://$S3_BUCKET/reusable/$NAME/$VERSION --recursive --acl public-read --cache-control max-age=31556926,public

  publish:
    docker:
      - image: *default_image
    working_directory: ~/build        
    steps:
      - checkout       
      - attach_workspace:
          at: ./dist               
      - run:
          name: Publish public package
          command: |
            echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
            npm publish --access=public            

workflows:
  version: 2
  build_publish:
    jobs:
      - build    
      - push:
          context: org-global
          requires:
            - build
      - publish:
          context: org-global
          requires:
            - push         